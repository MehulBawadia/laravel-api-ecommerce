openapi: 3.0.3
info:
  title: 'Laravel E-Commerce API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/admin/generate:
    post:
      summary: 'Genreate the administrator'
      operationId: genreateTheAdministrator
      description: "API to generate the super administrator. It is only a one-time call\nin the entire lifetime of the application."
      parameters: []
      responses: {  }
      tags:
        - 'Administrator Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: qui
                last_name:
                  type: string
                  description: ''
                  example: inventore
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: pagac.adriana@example.com
                password:
                  type: string
                  description: ''
                  example: '-T<,\a|8`P)$5RCt@~CM'
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: eveniet
              required:
                - first_name
                - last_name
                - email
                - password
                - confirm_password
      security: []
  /api/v1/admin/login:
    post:
      summary: Login
      operationId: login
      description: "Login the administrator, and generate the token.\nThis token will be used for further requests in the admin panel."
      parameters: []
      responses: {  }
      tags:
        - 'Administrator Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: thiel.gertrude@example.net
                password:
                  type: string
                  description: ''
                  example: '''4VXl''"\h:3x0#87oN9A'
              required:
                - email
                - password
      security: []
  /api/v1/admin/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Logout the administrator user. When they log out, all the tokens\nrelated to them will also get deleted."
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Administrator Endpoints'
  /api/v1/admin/account-settings/general:
    post:
      summary: 'General Settings'
      operationId: generalSettings
      description: 'Update the general settings of the admin user.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'General Settings updated successfully.'
                  data:
                    id: 1
                    first_name: John
                    last_name: Doe
                    email: johndoe@example.com
                    created_at: '2023-05-17T00:00:00.000000Z'
                    updated_at: '2023-05-17T00:00:00.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'General Settings updated successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      first_name:
                        type: string
                        example: John
                      last_name:
                        type: string
                        example: Doe
                      email:
                        type: string
                        example: johndoe@example.com
                      created_at:
                        type: string
                        example: '2023-05-17T00:00:00.000000Z'
                      updated_at:
                        type: string
                        example: '2023-05-17T00:00:00.000000Z'
                      deleted_at:
                        type: string
                        example: null
      tags:
        - 'Administrator Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'The first name of the admin user.'
                  example: John
                last_name:
                  type: string
                  description: 'The last name of the admin user.'
                  example: Doe
                email:
                  type: string
                  description: 'The email of the admin user.'
                  example: johndoe@example.com
              required:
                - first_name
                - last_name
                - email
  /api/v1/admin/account-settings/change-password:
    post:
      summary: 'Change Password'
      operationId: changePassword
      description: "Update the password of the currently authenticated admin user.\nIt will be updated only when the current password is matched."
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Password updated successfully.'
                  data: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Password updated successfully.'
                  data:
                    type: array
                    example: []
      tags:
        - 'Administrator Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: "The admin user's current password."
                  example: Pa$$w0rd
                new_password:
                  type: string
                  description: 'The new password.'
                  example: Secret
                new_password_confirmation:
                  type: string
                  description: 'Confirm the new password, should match new_password.'
                  example: Secret
              required:
                - current_password
                - new_password
                - new_password_confirmation
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/admin/forgot-password:
    post:
      summary: 'Send the password reset link to the given email address.'
      operationId: sendThePasswordResetLinkToTheGivenEmailAddress
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gerhold.electa@example.com
              required:
                - email
  /api/v1/admin/reset-password:
    post:
      summary: "Reset the user's password with the new password."
      operationId: resetTheUsersPasswordWithTheNewPassword
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: quitzon.abbey@example.org
                token:
                  type: string
                  description: ''
                  example: dolorem
                new_password:
                  type: string
                  description: ''
                  example: et
                repeat_new_password:
                  type: string
                  description: 'The value and <code>new_password</code> must match.'
                  example: eum
              required:
                - email
                - token
                - new_password
                - repeat_new_password
  /api/v1/admin/categories:
    get:
      summary: 'Get and paginate the categories.'
      operationId: getAndPaginateTheCategories
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new category.'
      operationId: storeANewCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: qlqgqiznsaxkjcvwgnzlqa
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Vero velit recusandae nobis deserunt excepturi cupiditate sequi.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: uojlnoezfbkcjqzmjmtnfuvun
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: qsdeesskvkhe
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gspkncrfuymrbmrfpdntdl
              required:
                - name
                - description
                - meta_title
                - meta_description
  '/api/v1/admin/categories/{id}':
    get:
      summary: 'Fetch the details about the given category id.'
      operationId: fetchTheDetailsAboutTheGivenCategoryId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the category details of the given id.'
      operationId: updateTheCategoryDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ooathlesdtndoh
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Facilis saepe voluptas quia at.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: fpmimeopwxlchtvn
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: ptjrurnfhbuxhesvrtnrp
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gwrmoivkncrxyt
              required:
                - name
                - description
                - meta_title
                - meta_description
    delete:
      summary: 'Delete the category details of the given id.'
      operationId: deleteTheCategoryDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 4
        required: true
        schema:
          type: integer
  /api/v1/admin/tags:
    get:
      summary: 'Get and paginate the tags.'
      operationId: getAndPaginateTheTags
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new Tag.'
      operationId: storeANewTag
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: otohalcsnwybb
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Nesciunt sit quia enim assumenda dolorum.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: dtguumqfyovchnyfdfmfzej
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: pmmkzywmeveclknqfjlqrsm
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cqkumqonpznjmctpgjeg
              required:
                - name
                - description
                - meta_title
                - meta_description
  '/api/v1/admin/tags/{id}':
    get:
      summary: 'Fetch the details about the given tag id.'
      operationId: fetchTheDetailsAboutTheGivenTagId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the tag details of the given id.'
      operationId: updateTheTagDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: hqgmlmrfeeisxqzbafusqbddw
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Sunt ut vel delectus enim eveniet.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: had
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: mit
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gpx
              required:
                - name
                - description
                - meta_title
                - meta_description
    delete:
      summary: 'Delete the tag details of the given id.'
      operationId: deleteTheTagDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 4
        required: true
        schema:
          type: integer
  /api/v1/admin/brands:
    get:
      summary: 'Get and paginate the brands.'
      operationId: getAndPaginateTheBrands
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new Brand.'
      operationId: storeANewBrand
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: miui
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Voluptas sit non occaecati quo dolores quo atque nulla.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: xlewyiorpffsef
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: whgcmsnkqvih
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vbzxxgarbqfu
              required:
                - name
                - description
                - meta_title
                - meta_description
  '/api/v1/admin/brands/{id}':
    get:
      summary: 'Fetch the details about the given brand id.'
      operationId: fetchTheDetailsAboutTheGivenBrandId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the brand details of the given id.'
      operationId: updateTheBrandDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ziokohzjgsvwxrcnx
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Porro eius ipsam similique omnis quia nam enim.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: h
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: ukjrmggeeyzm
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wlenyxombjsnjnnvq
              required:
                - name
                - description
                - meta_title
                - meta_description
    delete:
      summary: 'Delete the brand details of the given id.'
      operationId: deleteTheBrandDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the brand.'
        example: 17
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Administrator Endpoints'
    description: ''
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
