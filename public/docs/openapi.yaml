openapi: 3.0.3
info:
  title: 'Laravel E-Commerce API'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/admin/generate:
    post:
      summary: 'Genreate the administrator'
      operationId: genreateTheAdministrator
      description: "API to generate the super administrator. It is only a one-time call\nin the entire lifetime of the application."
      parameters: []
      responses: {  }
      tags:
        - 'Administrator Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: quis
                last_name:
                  type: string
                  description: ''
                  example: minima
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: carmela27@example.net
                password:
                  type: string
                  description: ''
                  example: 'U{hw`PGVVR;'
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: quibusdam
              required:
                - first_name
                - last_name
                - email
                - password
                - confirm_password
      security: []
  /api/v1/admin/login:
    post:
      summary: Login
      operationId: login
      description: "Login the administrator, and generate the token.\nThis token will be used for further requests in the admin panel."
      parameters: []
      responses: {  }
      tags:
        - 'Administrator Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: augustine.paucek@example.net
                password:
                  type: string
                  description: ''
                  example: 'Y{+64M&_J'
              required:
                - email
                - password
      security: []
  /api/v1/admin/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Logout the administrator user. When they log out, all the tokens\nrelated to them will also get deleted."
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Administrator Endpoints'
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/v1/admin/forgot-password:
    post:
      summary: 'Send the password reset link to the given email address.'
      operationId: sendThePasswordResetLinkToTheGivenEmailAddress
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ayden.zboncak@example.com
              required:
                - email
  /api/v1/admin/reset-password:
    post:
      summary: "Reset the user's password with the new password."
      operationId: resetTheUsersPasswordWithTheNewPassword
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: igaylord@example.com
                token:
                  type: string
                  description: ''
                  example: voluptatem
                new_password:
                  type: string
                  description: ''
                  example: facere
                repeat_new_password:
                  type: string
                  description: 'The value and <code>new_password</code> must match.'
                  example: odit
              required:
                - email
                - token
                - new_password
                - repeat_new_password
  /api/v1/admin/account-settings/general:
    post:
      summary: 'Update the general settings of the admin user.'
      operationId: updateTheGeneralSettingsOfTheAdminUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: unde
                last_name:
                  type: string
                  description: ''
                  example: repellat
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ed36@example.net
              required:
                - first_name
                - last_name
                - email
  /api/v1/admin/account-settings/change-password:
    post:
      summary: "Change the admin user's password."
      operationId: changeTheAdminUsersPassword
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: a
                new_password:
                  type: string
                  description: ''
                  example: omnis
                new_password_confirmation:
                  type: string
                  description: ''
                  example: nobis
              required:
                - current_password
                - new_password
                - new_password_confirmation
  /api/v1/admin/categories:
    get:
      summary: 'Get and paginate the categories.'
      operationId: getAndPaginateTheCategories
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new category.'
      operationId: storeANewCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: zpgctxrsyfltb
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Autem tempore possimus non eos quisquam asperiores necessitatibus.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: txcdfhek
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: rsfgrkx
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ofspscvb
              required:
                - name
                - description
                - meta_title
                - meta_description
  '/api/v1/admin/categories/{id}':
    get:
      summary: 'Fetch the details about the given category id.'
      operationId: fetchTheDetailsAboutTheGivenCategoryId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the category details of the given id.'
      operationId: updateTheCategoryDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: sr
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Quod nostrum odio maxime eius vero.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: btuimfnfcvedgkjkh
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: vavukq
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zmxewlmtpdcohimbvngqemy
              required:
                - name
                - description
                - meta_title
                - meta_description
    delete:
      summary: 'Delete the category details of the given id.'
      operationId: deleteTheCategoryDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 19
        required: true
        schema:
          type: integer
  /api/v1/admin/tags:
    get:
      summary: 'Get and paginate the tags.'
      operationId: getAndPaginateTheTags
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new Tag.'
      operationId: storeANewTag
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: dmcfxvpvlimlekfyhut
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Excepturi qui sed neque atque quas in commodi repellat.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: knab
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: pztysyno
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sdwaeqrdfapfqbjto
              required:
                - name
                - description
                - meta_title
                - meta_description
  '/api/v1/admin/tags/{id}':
    get:
      summary: 'Fetch the details about the given tag id.'
      operationId: fetchTheDetailsAboutTheGivenTagId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the tag details of the given id.'
      operationId: updateTheTagDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: yoegjrcezcyvfozqnyol
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Ex est dolorem assumenda ipsam ab quia quo ducimus.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: zvnehtixx
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: npzdhfedwelvcjbdjp
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vogkfyzo
              required:
                - name
                - description
                - meta_title
                - meta_description
    delete:
      summary: 'Delete the tag details of the given id.'
      operationId: deleteTheTagDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/admin/brands:
    get:
      summary: 'Get and paginate the brands.'
      operationId: getAndPaginateTheBrands
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a new Brand.'
      operationId: storeANewBrand
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: lrtnzkyy
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'At vitae beatae repudiandae sed et.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: htjttlvukoevijdz
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: emphlfyergnut
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zhtwkwibgvojuzsfibjqbp
              required:
                - name
                - description
                - meta_title
                - meta_description
  '/api/v1/admin/brands/{id}':
    get:
      summary: 'Fetch the details about the given brand id.'
      operationId: fetchTheDetailsAboutTheGivenBrandId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the brand details of the given id.'
      operationId: updateTheBrandDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: iufbbsxmf
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Labore minima qui tempora voluptate exercitationem.'
                meta_title:
                  type: string
                  description: 'Must not be greater than 80 characters.'
                  example: jusah
                meta_description:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: xckwptcycpshj
                meta_keywords:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rczfypbzdkanyzznwill
              required:
                - name
                - description
                - meta_title
                - meta_description
    delete:
      summary: 'Delete the brand details of the given id.'
      operationId: deleteTheBrandDetailsOfTheGivenId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the brand.'
        example: 9
        required: true
        schema:
          type: integer
tags:
  -
    name: 'Administrator Endpoints'
    description: ''
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
