name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5v1e6dZkgDchbaaEV64f3P8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Auth the administrator'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: rgaylord@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: fri=X/
        type: string
        custom: []
    cleanBodyParameters:
      email: rgaylord@example.org
      password: fri=X/
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aaDcf66kbhV18gP5Ze3vdE4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send the password reset link to the given email address.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: terrance.toy@example.com
        type: string
        custom: []
    cleanBodyParameters:
      email: terrance.toy@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cbg6VkD46a1dPZf5evEha38'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Reset the user's password with the new password."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: sarai30@example.org
        type: string
        custom: []
      token:
        name: token
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: quisquam
        type: string
        custom: []
      repeat_new_password:
        name: repeat_new_password
        description: 'The value and <code>new_password</code> must match.'
        required: true
        example: rerum
        type: string
        custom: []
    cleanBodyParameters:
      email: sarai30@example.org
      token: qui
      new_password: quisquam
      repeat_new_password: rerum
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cPkaadgb3e6E615h4fZDV8v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout the administator.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k665be1aDv3acdfhVZg8EP4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/account-settings/general
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the general settings of the admin user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: porro
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: illum
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: igibson@example.com
        type: string
        custom: []
    cleanBodyParameters:
      first_name: porro
      last_name: illum
      email: igibson@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DPa41beVg86dfcEhv5kZa63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/account-settings/change-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Change the admin user's password."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: placeat
        type: string
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: amet
        type: string
        custom: []
      new_password_confirmation:
        name: new_password_confirmation
        description: ''
        required: true
        example: cum
        type: string
        custom: []
    cleanBodyParameters:
      current_password: placeat
      new_password: amet
      new_password_confirmation: cum
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5h16afdVkb34EZ8DcgPa6ev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the categories.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g4h6a83bvkDe1cdafPVE6Z5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: agdpizquyyjugnodmpiuhdxp
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Et hic in animi atque.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: xvzlmxcggz
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: kdytutolqgbndokgydn
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ghovcmjjcloxkfrwlhxfkuuop
        type: string
        custom: []
    cleanBodyParameters:
      name: agdpizquyyjugnodmpiuhdxp
      description: 'Et hic in animi atque.'
      meta_title: xvzlmxcggz
      meta_description: kdytutolqgbndokgydn
      meta_keywords: ghovcmjjcloxkfrwlhxfkuuop
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hkfVea3Dcg4ab518ZP6v6dE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given category id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 7
        type: integer
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dP83hea5Zv4cgkEV61af6bD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the category details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: kbonilftomntmvxc
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Illum exercitationem aliquam ut dolor repellendus.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: tuhbjhcctffgijeqayzimtprk
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: lfilm
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: jl
        type: string
        custom: []
    cleanBodyParameters:
      name: kbonilftomntmvxc
      description: 'Illum exercitationem aliquam ut dolor repellendus.'
      meta_title: tuhbjhcctffgijeqayzimtprk
      meta_description: lfilm
      meta_keywords: jl
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ga1heZav4cbfDd636V8EkP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the category details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4b6ZhD65dEaae8Vv1fg3cPk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the tags.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hDaZEcb5gaP6vVe684kf1d3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new Tag.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: twpxfoppzojfc
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Quis natus omnis quo molestias.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: dhpdxkxmnbbbavgbae
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: bcjcwmvbbx
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dfdzokpx
        type: string
        custom: []
    cleanBodyParameters:
      name: twpxfoppzojfc
      description: 'Quis natus omnis quo molestias.'
      meta_title: dhpdxkxmnbbbavgbae
      meta_description: bcjcwmvbbx
      meta_keywords: dfdzokpx
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3EkZa1Vdcafh64D8g6Pbev5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given tag id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a38g4Vh6cDE65d1fZkbPaev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the tag details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: c
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Dignissimos quia nemo quia.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: fxoiyvraszkvrfepzbcbrec
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: olfsrqridn
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nxucxekfumytxkboyfjxlbi
        type: string
        custom: []
    cleanBodyParameters:
      name: c
      description: 'Dignissimos quia nemo quia.'
      meta_title: fxoiyvraszkvrfepzbcbrec
      meta_description: olfsrqridn
      meta_keywords: nxucxekfumytxkboyfjxlbi
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64b5fE1D6P8Vke3Zdvahgca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the tag details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6dEPvaecgb3a1VkDZ86hf45'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the brands.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fk68gE51a3VPcDdhbea4vZ6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new Brand.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: ymx
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Omnis possimus ipsum voluptatem aut aspernatur.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: xhlkqogjwrrdoh
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: uuximgsss
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bijayqywwgdacyw
        type: string
        custom: []
    cleanBodyParameters:
      name: ymx
      description: 'Omnis possimus ipsum voluptatem aut aspernatur.'
      meta_title: xhlkqogjwrrdoh
      meta_description: uuximgsss
      meta_keywords: bijayqywwgdacyw
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer afvDP46ba1kdEhgZ8ce3V65'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given brand id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6ck5a8Vdeghbf614P3EZDa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the brand details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 14
        type: integer
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: nape
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Quia aut voluptatum quia et beatae consectetur doloribus dolore.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: prvgpopdhyhkpwkdnllgwnxg
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: xzdo
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hnvyx
        type: string
        custom: []
    cleanBodyParameters:
      name: nape
      description: 'Quia aut voluptatum quia et beatae consectetur doloribus dolore.'
      meta_title: prvgpopdhyhkpwkdnllgwnxg
      meta_description: xzdo
      meta_keywords: hnvyx
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ca6hVkv15d3Dag6Z84EePfb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the brand details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer da86f35PekgE1abD4VZ6chv'
    controller: null
    method: null
    route: null
    custom: []
