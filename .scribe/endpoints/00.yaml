name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 68ka3Vg4bvfachZ15Ped6DE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send the password reset link to the given email address.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ayden.zboncak@example.com
        type: string
        custom: []
    cleanBodyParameters:
      email: ayden.zboncak@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ved8Daha3V6bfZcg4kE16P5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Reset the user's password with the new password."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: igaylord@example.com
        type: string
        custom: []
      token:
        name: token
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: facere
        type: string
        custom: []
      repeat_new_password:
        name: repeat_new_password
        description: 'The value and <code>new_password</code> must match.'
        required: true
        example: odit
        type: string
        custom: []
    cleanBodyParameters:
      email: igaylord@example.com
      token: voluptatem
      new_password: facere
      repeat_new_password: odit
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g1kD4b8ZdaEf3VcPve56ha'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/account-settings/general
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the general settings of the admin user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: unde
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: repellat
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ed36@example.net
        type: string
        custom: []
    cleanBodyParameters:
      first_name: unde
      last_name: repellat
      email: ed36@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer chaf35468ebda6VZkP1EvgD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/account-settings/change-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Change the admin user's password."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: a
        type: string
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      new_password_confirmation:
        name: new_password_confirmation
        description: ''
        required: true
        example: nobis
        type: string
        custom: []
    cleanBodyParameters:
      current_password: a
      new_password: omnis
      new_password_confirmation: nobis
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4vkaDf1a6Z35hcVEg6edPb8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the categories.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gdVbeE6ca83Zakv6PDf514h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: zpgctxrsyfltb
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Autem tempore possimus non eos quisquam asperiores necessitatibus.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: txcdfhek
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: rsfgrkx
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ofspscvb
        type: string
        custom: []
    cleanBodyParameters:
      name: zpgctxrsyfltb
      description: 'Autem tempore possimus non eos quisquam asperiores necessitatibus.'
      meta_title: txcdfhek
      meta_description: rsfgrkx
      meta_keywords: ofspscvb
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bcD4aa5dg6h6Z3efE1vPV8k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given category id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eg1a4akbvdV65chPZ6fD38E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the category details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 12
        type: integer
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: sr
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Quod nostrum odio maxime eius vero.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: btuimfnfcvedgkjkh
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: vavukq
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zmxewlmtpdcohimbvngqemy
        type: string
        custom: []
    cleanBodyParameters:
      name: sr
      description: 'Quod nostrum odio maxime eius vero.'
      meta_title: btuimfnfcvedgkjkh
      meta_description: vavukq
      meta_keywords: zmxewlmtpdcohimbvngqemy
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 68ck1b54dfgeP6DaZhaV3Ev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the category details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 18
        type: integer
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fd6e3aZb4g6h15VPak8DcvE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the tags.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a31EfZab65ghevP6Dcd48kV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new Tag.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: dmcfxvpvlimlekfyhut
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Excepturi qui sed neque atque quas in commodi repellat.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: knab
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: pztysyno
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: sdwaeqrdfapfqbjto
        type: string
        custom: []
    cleanBodyParameters:
      name: dmcfxvpvlimlekfyhut
      description: 'Excepturi qui sed neque atque quas in commodi repellat.'
      meta_title: knab
      meta_description: pztysyno
      meta_keywords: sdwaeqrdfapfqbjto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vb4Vc6dPhZa8EkD6f35ae1g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given tag id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 7
        type: integer
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dZDb8aeVhg654EPk1cf36av'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the tag details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: yoegjrcezcyvfozqnyol
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Ex est dolorem assumenda ipsam ab quia quo ducimus.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: zvnehtixx
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: npzdhfedwelvcjbdjp
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vogkfyzo
        type: string
        custom: []
    cleanBodyParameters:
      name: yoegjrcezcyvfozqnyol
      description: 'Ex est dolorem assumenda ipsam ab quia quo ducimus.'
      meta_title: zvnehtixx
      meta_description: npzdhfedwelvcjbdjp
      meta_keywords: vogkfyzo
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VhPgD8k4dvface6a5bZ136E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the tag details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8P4de6hbv6gaEck13Z5afVD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the brands.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gPac8eDb6advfk61hV354ZE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new Brand.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: lrtnzkyy
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'At vitae beatae repudiandae sed et.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: htjttlvukoevijdz
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: emphlfyergnut
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zhtwkwibgvojuzsfibjqbp
        type: string
        custom: []
    cleanBodyParameters:
      name: lrtnzkyy
      description: 'At vitae beatae repudiandae sed et.'
      meta_title: htjttlvukoevijdz
      meta_description: emphlfyergnut
      meta_keywords: zhtwkwibgvojuzsfibjqbp
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1a586Ecv3d4hfgkVDe6abZP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given brand id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pag3dfv6ha615kDeZcV84Eb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the brand details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: iufbbsxmf
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Labore minima qui tempora voluptate exercitationem.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: jusah
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: xckwptcycpshj
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rczfypbzdkanyzznwill
        type: string
        custom: []
    cleanBodyParameters:
      name: iufbbsxmf
      description: 'Labore minima qui tempora voluptate exercitationem.'
      meta_title: jusah
      meta_description: xckwptcycpshj
      meta_keywords: rczfypbzdkanyzznwill
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5h38e6VE1fkcba6Zd4PvgDa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the brand details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eae366cfPb8a5dDg1ZVvhk4'
    controller: null
    method: null
    route: null
    custom: []
