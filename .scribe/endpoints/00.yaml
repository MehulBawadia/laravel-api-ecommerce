name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e68gdPhv3bfca146DVa5kZE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send the password reset link to the given email address.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: karina83@example.net
        type: string
        custom: []
    cleanBodyParameters:
      email: karina83@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Pvc8aaEVgZbd5fkDeh3461'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Reset the user's password with the new password."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: mabelle.klein@example.com
        type: string
        custom: []
      token:
        name: token
        description: ''
        required: true
        example: at
        type: string
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: ipsam
        type: string
        custom: []
      repeat_new_password:
        name: repeat_new_password
        description: 'The value and <code>new_password</code> must match.'
        required: true
        example: ut
        type: string
        custom: []
    cleanBodyParameters:
      email: mabelle.klein@example.com
      token: at
      new_password: ipsam
      repeat_new_password: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6e18Ev4kha5fPgad3DV6bc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the categories.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VEZaeP4g68fdDhkv156cba3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: elcvzcgikambhhfifshojcom
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Quis ut incidunt quasi voluptates tempora voluptatem eligendi officiis.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: dlwjdtbgeheaezqjljdkme
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: hleoqvfhqhwmnktgv
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: s
        type: string
        custom: []
    cleanBodyParameters:
      name: elcvzcgikambhhfifshojcom
      description: 'Quis ut incidunt quasi voluptates tempora voluptatem eligendi officiis.'
      meta_title: dlwjdtbgeheaezqjljdkme
      meta_description: hleoqvfhqhwmnktgv
      meta_keywords: s
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k43cdPaaD6hVg6ef5Z81vbE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given category id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ca1dPhE568fgbkVaveZ34D6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the category details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: wjramtu
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Mollitia quibusdam deserunt assumenda fuga reprehenderit voluptas vero.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: dggoowbaaqsifp
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: hikafcips
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fbj
        type: string
        custom: []
    cleanBodyParameters:
      name: wjramtu
      description: 'Mollitia quibusdam deserunt assumenda fuga reprehenderit voluptas vero.'
      meta_title: dggoowbaaqsifp
      meta_description: hikafcips
      meta_keywords: fbj
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6gVDdZ8kPeca1f6E35vbh4a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the category details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gVPZ6d16Eaak5b4f8Dev3hc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the tags.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 61kfhgvEdVD8cbaeZP6a453'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new Tag.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: cvxicrrxubaaqhvfa
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Dolor dolor fuga qui minus porro laudantium.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: q
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: yyeynnukbqzmvjcdzfyhvi
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xin
        type: string
        custom: []
    cleanBodyParameters:
      name: cvxicrrxubaaqhvfa
      description: 'Dolor dolor fuga qui minus porro laudantium.'
      meta_title: q
      meta_description: yyeynnukbqzmvjcdzfyhvi
      meta_keywords: xin
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64hg5ebPD38EfcvaadZ1Vk6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given tag id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 8
        type: integer
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6b45E3dca8VhPaZgD6vkf1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the tag details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 15
        type: integer
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: jpwknnmxnjn
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Natus minima delectus consequatur tempore esse.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: seuxzjy
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: qkisrfvnfwxeqafxvfwajb
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nvsshfykltj
        type: string
        custom: []
    cleanBodyParameters:
      name: jpwknnmxnjn
      description: 'Natus minima delectus consequatur tempore esse.'
      meta_title: seuxzjy
      meta_description: qkisrfvnfwxeqafxvfwajb
      meta_keywords: nvsshfykltj
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zv4kd5638VeaPE16cDahbfg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the tag details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dh8Z4c6EkPV6gvDaaf53e1b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get and paginate the brands.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 466Phev3a8bgcfEZ5kD1Vda'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new Brand.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: xdqueoqlyppqmswegayawm
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Minus aperiam exercitationem est odio.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: wj
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: bmdpsfow
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qlvqsvfgnyhsocqqwu
        type: string
        custom: []
    cleanBodyParameters:
      name: xdqueoqlyppqmswegayawm
      description: 'Minus aperiam exercitationem est odio.'
      meta_title: wj
      meta_description: bmdpsfow
      meta_keywords: qlvqsvfgnyhsocqqwu
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PaZ3E8Df5Ved6vk41gca6hb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch the details about the given brand id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e5g6b6D4VdPhaE18vf3cZak'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the brand details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: ffepwyrzjddvhzemjfwwho
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Voluptas aut eos sequi molestiae.'
        type: string
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 80 characters.'
        required: true
        example: huyukqcvfgmbzmjlmcldxw
        type: string
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 180 characters.'
        required: true
        example: nousdwimlxjhrdgkevrksu
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bpypxdratsttdzcl
        type: string
        custom: []
    cleanBodyParameters:
      name: ffepwyrzjddvhzemjfwwho
      description: 'Voluptas aut eos sequi molestiae.'
      meta_title: huyukqcvfgmbzmjlmcldxw
      meta_description: nousdwimlxjhrdgkevrksu
      meta_keywords: bpypxdratsttdzcl
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DZ34kefc56dgaav6h1EVb8P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the brand details of the given id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kdP6ca3hbZgDae45E8fV16v'
    controller: null
    method: null
    route: null
    custom: []
